# docker build -t torrent_service . -f Dockerfile_torrapi
FROM python:3.12-slim

LABEL Author="Mikael"

# Install system deps (curl for healthcheck; toolchain/libs for native builds if needed)
RUN apt-get update && apt-get install -y --no-install-recommends \
    curl build-essential gcc libxml2-dev libxslt-dev libpq-dev \
  && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Runtime defaults (override via environment/compose)
ENV TORR_API_PORT=9092
ENV TORR_API_PATH=/torr-api

# Copy application sources (includes pyproject.toml)
COPY torrent_api/ ./
COPY utils.py ./

# Install uv and prepare venv; lock & sync dependencies
RUN curl -LsSf https://astral.sh/uv/install.sh | sh && /root/.local/bin/uv --version
RUN /root/.local/bin/uv venv && /root/.local/bin/uv lock && /root/.local/bin/uv sync --frozen

# Ensure runtime uses the venv
ENV VIRTUAL_ENV=/app/.venv
ENV PATH="/app/.venv/bin:$PATH"

# Service port
EXPOSE 9092

# Container healthcheck using the Falcon app's health endpoint
HEALTHCHECK --interval=30s --timeout=5s --retries=3 CMD sh -c 'BASE="${TORR_API_PATH:-/torr-api}"; BASE="${BASE#/}"; BASE="${BASE%/}"; curl -fsS "http://127.0.0.1:${TORR_API_PORT:-9092}/$BASE/health" || exit 1'

# Production entrypoint: Gunicorn serving wsgi:app
ENTRYPOINT ["sh","-c","exec gunicorn -c gunicorn.conf.py --bind 0.0.0.0:${TORR_API_PORT:-9092} wsgi:app"]
