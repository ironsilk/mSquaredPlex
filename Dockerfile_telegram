# docker build -t telegram_service . -f Dockerfile_telegram
FROM python:3.12-slim

LABEL Author="Mikael"

WORKDIR /app

# Copy application sources (includes pyproject.toml)
COPY telegram_service/ ./
COPY telegram_service/images ./images
COPY utils.py ./

# System build deps for optional native builds (generally wheels exist, but keep toolchain)
RUN apt-get update && apt-get install -y --no-install-recommends \
    curl build-essential gcc \
  && rm -rf /var/lib/apt/lists/*

# Install uv and prepare venv; resolve and sync dependencies from pyproject
RUN curl -LsSf https://astral.sh/uv/install.sh | sh && /root/.local/bin/uv --version
RUN /root/.local/bin/uv venv && /root/.local/bin/uv lock && /root/.local/bin/uv sync --frozen

# Ensure runtime uses the venv
ENV VIRTUAL_ENV=/app/.venv
ENV PATH="/app/.venv/bin:$PATH"

# Telegram bot runs via polling; no external port required
# EXPOSE 9092

# Configuration:
# - WATCHLIST_SCAN_INTERVAL_SECONDS: optional, interval for background watchlist monitor (default 10800 = 3 hours)
#   Set via docker-compose or container environment. Example:
#   environment:
#     - WATCHLIST_SCAN_INTERVAL_SECONDS=7200

ENTRYPOINT ["python", "app.py"]
